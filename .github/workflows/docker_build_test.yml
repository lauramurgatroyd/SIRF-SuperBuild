name: Docker build test publish

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install docker and pre-reqs
        shell: bash -l {0}
        run: |
          sudo apt-get update -y
          sudo apt-get upgrade -y
          sudo apt-get install ca-certificates curl gnupg lsb-release -y
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
          sudo docker run hello-world
          
          
      - name: Build docker core image
        # Builds docker image from Docker file.
        shell: bash -l {0}
        run: |
          docker-compose -f docker/docker-compose.yml pull core # is this needed here - does it do anything?
          docker-compose -f docker/docker-compose.yml build --pull core -t synerbi/sirf:core
          
      # CURRENTLY IN TRAVIS THERE ARE NO 'CORE' TESTS, SO WE HAVE NONE HERE
      
      - name: Build docker devel image
        # Builds docker image from Docker file.
        shell: bash -l {0}
        run: |
          docker-compose -f docker/docker-compose.yml -f docker/docker-compose.srv.yml pull core
          docker-compose -f docker/docker-compose.yml -f docker/docker-compose.srv.yml build sirf  -t synerbi/sirf:devel

      - name: Run docker devel container with tests
        shell: bash -l {0}
        run: |
          docker-compose -f docker/docker-compose.yml -f docker/docker-compose.srv.yml run --rm -u jovyan --entrypoint /bin/bash sirf --login -c /devel/test.sh 1
          
    # TODO: publish to come later
